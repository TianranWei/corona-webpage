{"ast":null,"code":"import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api';\nexport const fetchData = async country => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(changeableUrl);\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    return data.map(({\n      confirmed,\n      deaths,\n      reportDate: date\n    }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date\n    }));\n  } catch (error) {\n    return error;\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${url}/countries`);\n    return countries.map(country => country.name);\n  } catch (error) {\n    return error;\n  }\n}; // // functions to fetch data\n// import axios from 'axios';\n// const url = 'https://covid19.mathdro.id/api';\n// // async: a function always returns a promise.\n// // Other values are wrapped in a resolved promise automatically.\n// export const fetchData = async () => {\n// \ttry {\n// \t\t// The keyword await makes JavaScript wait until that\n// \t\t// promise settles and returns its result.\n// \t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\n// \t\tconst modifiedData = {\n// \t\t\tconfirmed,\n// \t\t\trecovered,\n// \t\t\tdeaths,\n// \t\t\tlastUpdate\n// \t\t};\n// \t\treturn modifiedData;\n// \t} catch (error) {}\n// };\n// export const fetchDailyData = async () => {\n// \ttry {\n// \t  const { data } = await axios.get(`${url}/daily`);\n// \t  return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n// \t} catch (error) {\n// \t  return error;\n// \t}\n//   };","map":{"version":3,"sources":["/Users/noah/workplace/javascript/corona-tracker/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","data","confirmed","recovered","deaths","lastUpdate","get","error","fetchDailyData","map","reportDate","date","total","fetchCountries","countries","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AAC1C,MAAIC,aAAa,GAAGH,GAApB;;AAEA,MAAIE,OAAJ,EAAa;AACXC,IAAAA,aAAa,GAAI,GAAEH,GAAI,cAAaE,OAAQ,EAA5C;AACD;;AAED,MAAI;AACF,UAAM;AAAEE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAR,QAAyD,MAAMT,KAAK,CAACU,GAAN,CAAUN,aAAV,CAArE;AAEA,WAAO;AAAEE,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA,MAAxB;AAAgCC,MAAAA;AAAhC,KAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,QAAjB,CAAvB;AAEA,WAAOI,IAAI,CAACQ,GAAL,CAAS,CAAC;AAAEP,MAAAA,SAAF;AAAaE,MAAAA,MAAb;AAAqBM,MAAAA,UAAU,EAAEC;AAAjC,KAAD,MAA8C;AAAET,MAAAA,SAAS,EAAEA,SAAS,CAACU,KAAvB;AAA8BR,MAAAA,MAAM,EAAEA,MAAM,CAACQ,KAA7C;AAAoDD,MAAAA;AAApD,KAA9C,CAAT,CAAP;AACD,GAJD,CAIE,OAAOJ,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CARM;AAUP,OAAO,MAAMM,cAAc,GAAG,YAAY;AACxC,MAAI;AACF,UAAM;AAAEZ,MAAAA,IAAI,EAAE;AAAEa,QAAAA;AAAF;AAAR,QAA0B,MAAMlB,KAAK,CAACU,GAAN,CAAW,GAAET,GAAI,YAAjB,CAAtC;AAEA,WAAOiB,SAAS,CAACL,GAAV,CAAeV,OAAD,IAAaA,OAAO,CAACgB,IAAnC,CAAP;AACD,GAJD,CAIE,OAAOR,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CARM,C,CAaP;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\n\n\n\n// // functions to fetch data\n\n// import axios from 'axios';\n\n// const url = 'https://covid19.mathdro.id/api';\n\n// // async: a function always returns a promise.\n// // Other values are wrapped in a resolved promise automatically.\n// export const fetchData = async () => {\n// \ttry {\n// \t\t// The keyword await makes JavaScript wait until that\n// \t\t// promise settles and returns its result.\n// \t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\n// \t\tconst modifiedData = {\n// \t\t\tconfirmed,\n// \t\t\trecovered,\n// \t\t\tdeaths,\n// \t\t\tlastUpdate\n// \t\t};\n// \t\treturn modifiedData;\n// \t} catch (error) {}\n// };\n\n// export const fetchDailyData = async () => {\n// \ttry {\n// \t  const { data } = await axios.get(`${url}/daily`);\n  \n// \t  return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n// \t} catch (error) {\n// \t  return error;\n// \t}\n//   };"]},"metadata":{},"sourceType":"module"}