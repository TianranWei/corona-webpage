{"ast":null,"code":"var _jsxFileName = \"/Users/noah/workplace/javascript/corona-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css'; // export default function Chart() {\n// \t// state={\n//     dailyData: {}\n// }\n// const [ dailyData, setDailyData ] = useState([]);\n// fetchedData =\n// fetchedData = fetchDailyData()\n// setDailyData(fetchedData);\n// console.log(this.props)\n// useEffect(() => {\n// \tconst fetchAPI = () => {\n//         setDailyData(await fetchDailyData());\n// \t};\n// \tfetchAPI();\n// });\n// const lineChart = this.props.dailyData.length ?\n// (\n// \t<Line\n// \t\tdata={{\n// \t\t\tlables: '',\n// \t\t\tdatasets: [\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ confirmed }) => confirmed),\n// \t\t\t\t\tlabel: 'Infected',\n// \t\t\t\t\tborderColor: '#3333ff',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ deaths }) => deaths),\n// \t\t\t\t\tlabel: 'Deaths',\n// \t\t\t\t\tborderColor: 'red',\n// \t\t\t\t\tbackgroundColor: 'rgba(225,0,0,0.5)',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t}\n// \t\t\t]\n// \t\t}}\n// \t/>\n// ) : null;\n// \treturn <div className={styles.container}>\n//     </div>;\n// }\n\nconst Chart = ({\n  dailyData\n}) => {\n  console.log(DailyData.map(({\n    date\n  }) => date));\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      lables: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(225,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/noah/workplace/javascript/corona-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","console","log","DailyData","map","date","lineChart","length","lables","datasets","data","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAACC,GAAV,CAAc,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAA5B,CAAZ;AACA,QAAMC,SAAS,GAAGN,SAAS,CAACO,MAAV,gBACjB,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACLC,MAAAA,MAAM,EAAER,SAAS,CAACI,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADH;AAELI,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,IAAI,EAAEV,SAAS,CAACI,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADP;AAECC,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,SAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OADS,EAOT;AACCJ,QAAAA,IAAI,EAAEV,SAAS,CAACI,GAAV,CAAc,CAAC;AAAEW,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,mBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OAPS;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAqBd,IArBJ;AAuBA,sBAAO;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCX,SAAnC,CAAP;AACA,CA1BD;;AA4BA,eAAeP,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n// export default function Chart() {\n// \t// state={\n//     dailyData: {}\n// }\n// const [ dailyData, setDailyData ] = useState([]);\n// fetchedData =\n// fetchedData = fetchDailyData()\n// setDailyData(fetchedData);\n\n// console.log(this.props)\n\n// useEffect(() => {\n// \tconst fetchAPI = () => {\n\n//         setDailyData(await fetchDailyData());\n// \t};\n\n// \tfetchAPI();\n// });\n\n// const lineChart = this.props.dailyData.length ?\n// (\n// \t<Line\n// \t\tdata={{\n// \t\t\tlables: '',\n// \t\t\tdatasets: [\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ confirmed }) => confirmed),\n// \t\t\t\t\tlabel: 'Infected',\n// \t\t\t\t\tborderColor: '#3333ff',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ deaths }) => deaths),\n// \t\t\t\t\tlabel: 'Deaths',\n// \t\t\t\t\tborderColor: 'red',\n// \t\t\t\t\tbackgroundColor: 'rgba(225,0,0,0.5)',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t}\n// \t\t\t]\n// \t\t}}\n// \t/>\n// ) : null;\n\n// \treturn <div className={styles.container}>\n//     </div>;\n// }\n\nconst Chart = ({ dailyData }) => {\n\tconsole.log(DailyData.map(({ date }) => date))\n\tconst lineChart = dailyData.length ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlables: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(225,0,0,0.5)',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\treturn <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}