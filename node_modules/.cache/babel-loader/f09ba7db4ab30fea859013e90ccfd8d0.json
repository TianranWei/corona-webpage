{"ast":null,"code":"var _jsxFileName = \"/Users/noah/workplace/javascript/corona-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  dailyData: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/noah/workplace/javascript/corona-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","dailyData","confirmed","recovered","deaths","country","setDailyData","fetchMyAPI","initialDailyData","barChart","labels","datasets","label","backgroundColor","data","value","legend","display","title","text","lineChart","map","date","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,SAASC,cAAT,QAA+B,WAA/B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAb;AAA+CC,EAAAA;AAA/C,CAAD,KAA8D;AAC3E,QAAM,CAAEJ,SAAF,EAAaK,YAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMY,UAAU,GAAG,YAAY;AAC9B,YAAMC,gBAAgB,GAAG,MAAMV,cAAc,EAA7C;AAEAQ,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACA,KAJD;;AAMAD,IAAAA,UAAU;AACV,GARQ,EAQP,EARO,CAAT;AAUA,QAAME,QAAQ,GAAGP,SAAS,gBACzB,oBAAC,GAAD;AACC,IAAA,IAAI,EAAE;AACLQ,MAAAA,MAAM,EAAE,CAAE,UAAF,EAAc,WAAd,EAA2B,QAA3B,CADH;AAELC,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,KAAK,EAAE,QADR;AAECC,QAAAA,eAAe,EAAE,CAAE,sBAAF,EAA0B,sBAA1B,EAAkD,sBAAlD,CAFlB;AAGCC,QAAAA,IAAI,EAAE,CAAEZ,SAAS,CAACa,KAAZ,EAAmBZ,SAAS,CAACY,KAA7B,EAAoCX,MAAM,CAACW,KAA3C;AAHP,OADS;AAFL,KADP;AAWC,IAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADA;AAERC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBd,OAAQ;AAAnD;AAFC,KAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADyB,GAiBtB,IAjBJ;AAmBA,QAAMe,SAAS,GAAGnB,SAAS,CAAC,CAAD,CAAT,gBACjB,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACLS,MAAAA,MAAM,EAAET,SAAS,CAACoB,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADH;AAELX,MAAAA,QAAQ,EAAE,CACT;AACCG,QAAAA,IAAI,EAAEb,SAAS,CAACoB,GAAV,CAAeP,IAAD,IAAUA,IAAI,CAACZ,SAA7B,CADP;AAECU,QAAAA,KAAK,EAAE,UAFR;AAGCW,QAAAA,WAAW,EAAE,SAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OADS,EAOT;AACCV,QAAAA,IAAI,EAAEb,SAAS,CAACoB,GAAV,CAAeP,IAAD,IAAUA,IAAI,CAACV,MAA7B,CADP;AAECQ,QAAAA,KAAK,EAAE,QAFR;AAGCW,QAAAA,WAAW,EAAE,KAHd;AAICV,QAAAA,eAAe,EAAE,sBAJlB;AAKCW,QAAAA,IAAI,EAAE;AALP,OAPS;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,GAqBd,IArBJ;AAuBA,sBAAO;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCpB,OAAO,GAAEI,QAAF,GAAWW,SAArD,CAAP;AACA,CAxDD;;AA0DA,eAAepB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ dailyData: { confirmed, recovered, deaths }, country }) => {\n\tconst [ dailyData, setDailyData ] = useState({});\n\n\tuseEffect(() => {\n\t\tconst fetchMyAPI = async () => {\n\t\t\tconst initialDailyData = await fetchDailyData();\n\n\t\t\tsetDailyData(initialDailyData);\n\t\t};\n\n\t\tfetchMyAPI();\n\t},[]);\n\n\tconst barChart = confirmed ? (\n\t\t<Bar\n\t\t\tdata={{\n\t\t\t\tlabels: [ 'Infected', 'Recovered', 'Deaths' ],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'People',\n\t\t\t\t\t\tbackgroundColor: [ 'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)' ],\n\t\t\t\t\t\tdata: [ confirmed.value, recovered.value, deaths.value ]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}}\n\t\t\toptions={{\n\t\t\t\tlegend: { display: false },\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` }\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\tconst lineChart = dailyData[0] ? (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dailyData.map((data) => data.deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}}\n\t\t/>\n\t) : null;\n\n\treturn <div className={styles.container}>{country? barChart:lineChart}</div>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}