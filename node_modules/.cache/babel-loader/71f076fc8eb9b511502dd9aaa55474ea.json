{"ast":null,"code":"var _jsxFileName = \"/Users/noah/workplace/javascript/corona-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css'; // export default function Chart() {\n// \t// state={\n//     dailyData: {}\n// }\n// const [ dailyData, setDailyData ] = useState([]);\n// fetchedData =\n// fetchedData = fetchDailyData()\n// setDailyData(fetchedData);\n// console.log(this.props)\n// useEffect(() => {\n// \tconst fetchAPI = () => {\n//         setDailyData(await fetchDailyData());\n// \t};\n// \tfetchAPI();\n// });\n// const lineChart = this.props.dailyData.length ?\n// (\n// \t<Line\n// \t\tdata={{\n// \t\t\tlables: '',\n// \t\t\tdatasets: [\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ confirmed }) => confirmed),\n// \t\t\t\t\tlabel: 'Infected',\n// \t\t\t\t\tborderColor: '#3333ff',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ deaths }) => deaths),\n// \t\t\t\t\tlabel: 'Deaths',\n// \t\t\t\t\tborderColor: 'red',\n// \t\t\t\t\tbackgroundColor: 'rgba(225,0,0,0.5)',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t}\n// \t\t\t]\n// \t\t}}\n// \t/>\n// ) : null;\n// \treturn <div className={styles.container}>\n//     </div>;\n// }\n\nconst Chart = ({\n  dailyData\n}) => {\n  while (!dailyData.length) {\n    return 'Loading....';\n  }\n\n  console.log(dailyData);\n  let result = dailyData.map(({\n    confirmed\n  }) => confirmed);\n  let deaths = dailyData.map(({\n    deaths\n  }) => deaths);\n  let date = dailyData.map(({\n    date\n  }) => date);\n  console.log(result);\n  console.log(deaths);\n  const lineChart = /*#__PURE__*/React.createElement(Line, {\n    data: {\n      lables: [\"1\", \"2\", \"3\"],\n      datasets: [{\n        data: result.slice(0, 10),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      } // {\n      // \tdata: deaths.slice(0,30),\n      // \tlabel: 'Deaths',\n      // \tborderColor: 'red',\n      // \tbackgroundColor: 'rgba(225,0,0,0.5)',\n      // \tfill: true\n      // }\n      ]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }); // ctx = document.getElementById(\"Chart1\").getContext(\"2d\");\n  // var lineChart = new Chart(ctx, {\n  // \ttype: 'line',\n  // \tdata: data,\n  //   });\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/noah/workplace/javascript/corona-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","length","console","log","result","map","confirmed","deaths","date","lineChart","lables","datasets","data","slice","label","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAChC,SAAO,CAACA,SAAS,CAACC,MAAlB,EAA0B;AACzB,WAAO,aAAP;AACA;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,MAAII,MAAM,GAAGJ,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAmBA,SAAjC,CAAb;AACA,MAAIC,MAAM,GAAGP,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEE,IAAAA;AAAF,GAAD,KAAgBA,MAA9B,CAAb;AACA,MAAIC,IAAI,GAAGR,SAAS,CAACK,GAAV,CAAc,CAAC;AAAEG,IAAAA;AAAF,GAAD,KAAcA,IAA5B,CAAX;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AAEA,QAAME,SAAS,gBACd,oBAAC,IAAD;AACC,IAAA,IAAI,EAAE;AACLC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,CADH;AAELC,MAAAA,QAAQ,EAAE,CACT;AACCC,QAAAA,IAAI,EAACR,MAAM,CAACS,KAAP,CAAa,CAAb,EAAe,EAAf,CADN;AAECC,QAAAA,KAAK,EAAE,UAFR;AAGCC,QAAAA,WAAW,EAAE,SAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OADS,CAOT;AACA;AACA;AACA;AACA;AACA;AACA;AAbS;AAFL,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAZgC,CAkChC;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAElB,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCR,SAAnC,CAAP;AACA,CAzCD;;AA2CA,eAAeV,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\n// export default function Chart() {\n// \t// state={\n//     dailyData: {}\n// }\n// const [ dailyData, setDailyData ] = useState([]);\n// fetchedData =\n// fetchedData = fetchDailyData()\n// setDailyData(fetchedData);\n\n// console.log(this.props)\n\n// useEffect(() => {\n// \tconst fetchAPI = () => {\n\n//         setDailyData(await fetchDailyData());\n// \t};\n\n// \tfetchAPI();\n// });\n\n// const lineChart = this.props.dailyData.length ?\n// (\n// \t<Line\n// \t\tdata={{\n// \t\t\tlables: '',\n// \t\t\tdatasets: [\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ confirmed }) => confirmed),\n// \t\t\t\t\tlabel: 'Infected',\n// \t\t\t\t\tborderColor: '#3333ff',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tdata: this.props.dailyData.map(({ deaths }) => deaths),\n// \t\t\t\t\tlabel: 'Deaths',\n// \t\t\t\t\tborderColor: 'red',\n// \t\t\t\t\tbackgroundColor: 'rgba(225,0,0,0.5)',\n// \t\t\t\t\tfill: true,\n// \t\t\t\t}\n// \t\t\t]\n// \t\t}}\n// \t/>\n// ) : null;\n\n// \treturn <div className={styles.container}>\n//     </div>;\n// }\n\nconst Chart = ({ dailyData }) => {\n\twhile (!dailyData.length) {\n\t\treturn 'Loading....';\n\t}\n\tconsole.log(dailyData);\n\n\tlet result = dailyData.map(({ confirmed }) => confirmed);\n\tlet deaths = dailyData.map(({ deaths }) => deaths);\n\tlet date = dailyData.map(({ date }) => date);\n\tconsole.log(result);\n\tconsole.log(deaths);\n\n\tconst lineChart = (\n\t\t<Line\n\t\t\tdata={{\n\t\t\t\tlables: [\"1\",\"2\",\"3\"],\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata:result.slice(0,10),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t},\n\t\t\t\t\t// {\n\t\t\t\t\t// \tdata: deaths.slice(0,30),\n\t\t\t\t\t// \tlabel: 'Deaths',\n\t\t\t\t\t// \tborderColor: 'red',\n\t\t\t\t\t// \tbackgroundColor: 'rgba(225,0,0,0.5)',\n\t\t\t\t\t// \tfill: true\n\t\t\t\t\t// }\n\t\t\t\t]\n\t\t\t}}\n\t\t/>\n\t);\n\t// ctx = document.getElementById(\"Chart1\").getContext(\"2d\");\n\t// var lineChart = new Chart(ctx, {\n\t// \ttype: 'line',\n\t// \tdata: data,\n\t//   });\n\n\treturn <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}