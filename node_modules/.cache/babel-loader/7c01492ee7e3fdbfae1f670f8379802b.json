{"ast":null,"code":"// import axios from 'axios';\n// const url = 'https://covid19.mathdro.id/api';\n// export const fetchData = async (country) => {\n//   let changeableUrl = url;\n//   if (country) {\n//     changeableUrl = `${url}/countries/${country}`;\n//   }\n//   try {\n//     const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n//     return { confirmed, recovered, deaths, lastUpdate };\n//   } catch (error) {\n//     return error;\n//   }\n// };\n// export const fetchDailyData = async () => {\n//   try {\n//     const { data } = await axios.get(`${url}/daily`);\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n//   } catch (error) {\n//     return error;\n//   }\n// };\n// export const fetchCountries = async () => {\n//   try {\n//     const { data: { countries } } = await axios.get(`${url}/countries`);\n//     return countries.map((country) => country.name);\n//   } catch (error) {\n//     return error;\n//   }\n// };\n// functions to fetch data\nimport axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api'; // async: a function always returns a promise.\n// Other values are wrapped in a resolved promise automatically.\n\nexport const fetchData = async () => {\n  try {\n    // The keyword await makes JavaScript wait until that\n    // promise settles and returns its result.\n    const {\n      data: {\n        confirmed,\n        recovered,\n        deaths,\n        lastUpdate\n      }\n    } = await axios.get(url);\n    const modifiedData = {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate\n    };\n    return modifiedData;\n  } catch (error) {}\n};\nexport const fetchDailyData = async () => {\n  try {\n    const {\n      data\n    } = await axios.get(`${url}/daily`);\n    return data.map(({\n      confirmed,\n      deaths,\n      reportDate: date\n    }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: {\n        countries\n      }\n    } = await axios.get(`${url}/countries`);\n    console.log(countries.map(name => countries.name));\n    return countries;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/noah/workplace/javascript/corona-tracker/src/api/index.js"],"names":["axios","url","fetchData","data","confirmed","recovered","deaths","lastUpdate","get","modifiedData","error","fetchDailyData","map","reportDate","date","total","console","log","fetchCountries","countries","name"],"mappings":"AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,gCAAZ,C,CAEA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG,YAAY;AACpC,MAAI;AACH;AACA;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,SAAb;AAAwBC,QAAAA,MAAxB;AAAgCC,QAAAA;AAAhC;AAAR,QAAyD,MAAMP,KAAK,CAACQ,GAAN,CAAUP,GAAV,CAArE;AACA,UAAMQ,YAAY,GAAG;AACpBL,MAAAA,SADoB;AAEpBC,MAAAA,SAFoB;AAGpBC,MAAAA,MAHoB;AAIpBC,MAAAA;AAJoB,KAArB;AAMA,WAAOE,YAAP;AACA,GAXD,CAWE,OAAOC,KAAP,EAAc,CAAE;AAClB,CAbM;AAeP,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,MAAI;AACH,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAMH,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAI,QAAjB,CAAvB;AAEA,WAAOE,IAAI,CAACS,GAAL,CAAS,CAAC;AAAER,MAAAA,SAAF;AAAaE,MAAAA,MAAb;AAAqBO,MAAAA,UAAU,EAAEC;AAAjC,KAAD,MAA8C;AAC7DV,MAAAA,SAAS,EAAEA,SAAS,CAACW,KADwC;AAE7DT,MAAAA,MAAM,EAAEA,MAAM,CAACS,KAF8C;AAG7DD,MAAAA;AAH6D,KAA9C,CAAT,CAAP;AAKA,GARD,CAQE,OAAOJ,KAAP,EAAc;AACfM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA;AACD,CAZM;AAcP,OAAO,MAAMQ,cAAc,GAAG,YAAW;AACvC,MAAI;AACF,UAAM;AAACf,MAAAA,IAAI,EAAC;AAACgB,QAAAA;AAAD;AAAN,QAAqB,MAAMnB,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAI,YAAjB,CAAjC;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYE,SAAS,CAACP,GAAV,CAAeQ,IAAD,IAAQD,SAAS,CAACC,IAAhC,CAAZ;AACA,WAAOD,SAAP;AACD,GAJD,CAIE,OAAOT,KAAP,EAAc;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD;AACF,CARM","sourcesContent":["// import axios from 'axios';\n\n// const url = 'https://covid19.mathdro.id/api';\n\n// export const fetchData = async (country) => {\n//   let changeableUrl = url;\n\n//   if (country) {\n//     changeableUrl = `${url}/countries/${country}`;\n//   }\n\n//   try {\n//     const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n//     return { confirmed, recovered, deaths, lastUpdate };\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\n// export const fetchDailyData = async () => {\n//   try {\n//     const { data } = await axios.get(`${url}/daily`);\n\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\n// export const fetchCountries = async () => {\n//   try {\n//     const { data: { countries } } = await axios.get(`${url}/countries`);\n\n//     return countries.map((country) => country.name);\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\n// functions to fetch data\n\nimport axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\n// async: a function always returns a promise.\n// Other values are wrapped in a resolved promise automatically.\nexport const fetchData = async () => {\n\ttry {\n\t\t// The keyword await makes JavaScript wait until that\n\t\t// promise settles and returns its result.\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(url);\n\t\tconst modifiedData = {\n\t\t\tconfirmed,\n\t\t\trecovered,\n\t\t\tdeaths,\n\t\t\tlastUpdate\n\t\t};\n\t\treturn modifiedData;\n\t} catch (error) {}\n};\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await axios.get(`${url}/daily`);\n\n\t\treturn data.map(({ confirmed, deaths, reportDate: date }) => ({\n\t\t\tconfirmed: confirmed.total,\n\t\t\tdeaths: deaths.total,\n\t\t\tdate\n\t\t}));\n\t} catch (error) {\n\t\tconsole.log(error)\n\t}\n};\n\nexport const fetchCountries = async() => {\n  try {\n    const {data:{countries}} = await axios.get(`${url}/countries`)\n    console.log(countries.map((name)=>countries.name));\n    return countries;\n  } catch (error) {\n    console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}